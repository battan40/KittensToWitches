{"ast":null,"code":"var _jsxFileName = \"/Users/angelabattillo/mod3-projects/kittensToWitches/kittens-to-witches/src/components/App/App.js\";\nimport React, { Component } from 'react';\nimport SpellInspirations from '../SpellInspirations/SpellInspirations';\nimport Form from '../Form/Form';\nimport Swanspiration from '../Swanspiration/Swanspiration';\nimport { Route } from 'react-router-dom';\nimport { fetchKittens, fetchSwansonQuotes } from '../../utils/apiCalls';\nimport background from '../../assets/enchantedForest.png';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.addSpell = newSpell => {\n      console.log(newSpell);\n      this.setState({\n        spells: [...this.state.spells, newSpell]\n      });\n    };\n\n    this.renderSpells = () => {\n      if (this.state.spells.length) {\n        return /*#__PURE__*/_jsxDEV(SpellInspirations, {\n          spells: this.state.spells,\n          favoriteSpell: this.favoriteSpell\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 17\n        }, this);\n      } else {\n        return /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"invitation\",\n          children: \"Cast your hearts desire\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 14\n        }, this);\n      }\n    };\n\n    this.favortiteSpell = id => {\n      const findSpell = this.state.spells.find(spell => spell.id === id);\n      findSpell.keep = !findSpell.keep;\n      this.setState({\n        spells: [...this.state.spells]\n      });\n    };\n\n    this.componentDidMount = async () => {\n      const swanspiration = await fetchSwansonQuotes().then(data => data[0]);\n      const kittenFamiliar = await fetchKittens().then(data => data.file);\n      const organizeKitsNQuotes = {\n        id: 0,\n        swanspiration,\n        kittenFamiliar\n      };\n      this.setState({\n        swanspiration: organizeKitsNQuotes\n      });\n      this.setState({\n        loading: false\n      });\n    };\n\n    this.state = {\n      keep: false,\n      loading: true,\n      swanspiration: '',\n      spells: [],\n      error: ''\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"App\",\n      style: {\n        backgroundImage: `url(${background})`\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"app-title\",\n        children: \"Kittens To Witches\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), this.state.loading && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"loading\",\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 32\n      }, this), this.state.swanspiration && /*#__PURE__*/_jsxDEV(Swanspiration, {\n        swanspiration: this.state.swanspiration\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        addSpell: this.addSpell\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this), this.state.error && /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: this.state.error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 30\n      }, this), this.renderSpells()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/angelabattillo/mod3-projects/kittensToWitches/kittens-to-witches/src/components/App/App.js"],"names":["React","Component","SpellInspirations","Form","Swanspiration","Route","fetchKittens","fetchSwansonQuotes","background","App","constructor","addSpell","newSpell","console","log","setState","spells","state","renderSpells","length","favoriteSpell","favortiteSpell","id","findSpell","find","spell","keep","componentDidMount","swanspiration","then","data","kittenFamiliar","file","organizeKitsNQuotes","loading","error","render","backgroundImage"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport SpellInspirations from '../SpellInspirations/SpellInspirations';\nimport Form from '../Form/Form'\nimport Swanspiration from '../Swanspiration/Swanspiration'\nimport { Route } from 'react-router-dom'\nimport { fetchKittens, fetchSwansonQuotes } from '../../utils/apiCalls'\nimport background from '../../assets/enchantedForest.png'\nimport './App.css';\n\nclass App extends Component{\n  constructor() {\n    super()\n      this.state = {\n        keep: false,\n        loading: true,\n        swanspiration: '',\n        spells: [],\n        error: ''\n      }\n  }\n\n  addSpell = (newSpell) => {\n    console.log(newSpell)\n    this.setState({ spells: [...this.state.spells, newSpell]})\n  }\n\n  renderSpells = () => {\n    if(this.state.spells.length) {\n      return    <SpellInspirations spells={this.state.spells} favoriteSpell={this.favoriteSpell}/>\n    } else {\n      return <h1 className='invitation'>Cast your hearts desire</h1>\n    }\n  }\n\n  favortiteSpell = (id) => {\n    const findSpell = this.state.spells.find(spell => spell.id === id)\n      findSpell.keep = !findSpell.keep\n      this.setState({ spells: [...this.state.spells]})\n\n  }\n\n  componentDidMount = async () => {\n    const swanspiration = await fetchSwansonQuotes()\n      .then(data => data[0])\n    const kittenFamiliar = await fetchKittens()\n      .then(data => data.file)\n    const organizeKitsNQuotes = {\n      id: 0, swanspiration, kittenFamiliar,\n    }\n    this.setState({ swanspiration:  organizeKitsNQuotes})\n    this.setState({loading: false})\n  }\n\n  render() {\n\n    return (\n      <main className='App' style={{ backgroundImage: `url(${background})`}}>\n        <h1 className='app-title'>Kittens To Witches</h1>\n        {this.state.loading && <p className='loading'>Loading...</p>}\n\n        {this.state.swanspiration &&\n          <Swanspiration\n            swanspiration={this.state.swanspiration}\n            />}\n\n          <Form\n          addSpell={this.addSpell}\n          />\n\n        {this.state.error && <h2>{this.state.error}</h2>}\n        {this.renderSpells()}\n\n      </main>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}