{"ast":null,"code":"var _jsxFileName = \"/Users/angelabattillo/mod3-projects/kittensToWitches/kittens-to-witches/src/components/App/App.js\";\nimport React, { Component } from 'react';\nimport SpellInspirations from '../SpellInspirations/SpellInspirations';\nimport Form from '../Form/Form';\nimport { Route } from 'react-router-dom';\nimport { fetchKittens, fetchSwansonQuotes } from '../../utils/apiCalls';\nimport background from '../../assets/enchantedForest.png';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.addSpell = newSpell => {\n      console.log(newSpell);\n      this.setState({\n        spells: [...this.state.spells, newSpell]\n      });\n    };\n\n    this.componentDidMount = async () => {\n      const swanspiration = await fetchSwansonQuotes().then(data => data[0]);\n      const kittenFamiliar = await fetchKittens().then(data => data.file);\n      const organizeKitsNQuotes = {\n        id: 0,\n        swanspiration,\n        kittenFamiliar\n      }; //this.setState({ spells: [...this.state.spells, organizeKitsNQuotes]})\n    };\n\n    this.renderSpells = () => {\n      if (this.state.spells.length) {\n        return /*#__PURE__*/_jsxDEV(SpellInspirations, {\n          spells: this.state.spells\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 16\n        }, this);\n      } else {\n        return /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Cast your hearts desire\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 14\n        }, this);\n      }\n    };\n\n    this.state = {\n      swanspiration: {},\n      spells: [],\n      error: ''\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"App\",\n      style: {\n        backgroundImage: `url(${background})`\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"app-title\",\n        children: \"Kittens To Witches\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        addSpell: this.addSpell\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), this.state.error && /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: this.state.error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 30\n      }, this), this.renderSpells()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App; //\n// componentDidMount = async () => {\n//   const swanspiration = await fetchSwansonQuotes()\n//     .then(data => data[0])\n//   const kittenFamiliar = await fetchKittens()\n//     .then(data => data.file)\n//   const organizeKitsNQuotes = {\n//     id: 0, swanspiration, kittenFamiliar,\n//   }\n//   this.setState({ swanspiration:  organizeKitsNQuotes})\n// }","map":{"version":3,"sources":["/Users/angelabattillo/mod3-projects/kittensToWitches/kittens-to-witches/src/components/App/App.js"],"names":["React","Component","SpellInspirations","Form","Route","fetchKittens","fetchSwansonQuotes","background","App","constructor","addSpell","newSpell","console","log","setState","spells","state","componentDidMount","swanspiration","then","data","kittenFamiliar","file","organizeKitsNQuotes","id","renderSpells","length","error","render","backgroundImage"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,iBAAP,MAA8B,wCAA9B;AACA,OAAOC,IAAP,MAAiB,cAAjB;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAASC,YAAT,EAAuBC,kBAAvB,QAAiD,sBAAjD;AACA,OAAOC,UAAP,MAAuB,kCAAvB;AACA,OAAO,WAAP;;;AAEA,MAAMC,GAAN,SAAkBP,SAAlB,CAA2B;AACzBQ,EAAAA,WAAW,GAAG;AACZ;;AADY,SASdC,QATc,GASFC,QAAD,IAAc;AACvBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACA,WAAKG,QAAL,CAAc;AAAEC,QAAAA,MAAM,EAAE,CAAC,GAAG,KAAKC,KAAL,CAAWD,MAAf,EAAuBJ,QAAvB;AAAV,OAAd;AACD,KAZa;;AAAA,SAcdM,iBAdc,GAcM,YAAY;AAC9B,YAAMC,aAAa,GAAG,MAAMZ,kBAAkB,GAC3Ca,IADyB,CACpBC,IAAI,IAAIA,IAAI,CAAC,CAAD,CADQ,CAA5B;AAEA,YAAMC,cAAc,GAAG,MAAMhB,YAAY,GACtCc,IAD0B,CACrBC,IAAI,IAAIA,IAAI,CAACE,IADQ,CAA7B;AAEA,YAAMC,mBAAmB,GAAG;AAC1BC,QAAAA,EAAE,EAAE,CADsB;AACnBN,QAAAA,aADmB;AACJG,QAAAA;AADI,OAA5B,CAL8B,CAQ9B;AACD,KAvBa;;AAAA,SAyBdI,YAzBc,GAyBC,MAAM;AACnB,UAAG,KAAKT,KAAL,CAAWD,MAAX,CAAkBW,MAArB,EAA6B;AAC3B,4BAAS,QAAC,iBAAD;AACC,UAAA,MAAM,EAAE,KAAKV,KAAL,CAAWD;AADpB;AAAA;AAAA;AAAA;AAAA,gBAAT;AAGD,OAJD,MAIO;AACL,4BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAP;AACD;AACF,KAjCa;;AAEV,SAAKC,KAAL,GAAa;AACXE,MAAAA,aAAa,EAAE,EADJ;AAEXH,MAAAA,MAAM,EAAE,EAFG;AAGXY,MAAAA,KAAK,EAAE;AAHI,KAAb;AAKH;;AA4BDC,EAAAA,MAAM,GAAG;AAEP,wBACE;AAAM,MAAA,SAAS,EAAC,KAAhB;AAAsB,MAAA,KAAK,EAAE;AAAEC,QAAAA,eAAe,EAAG,OAAMtB,UAAW;AAArC,OAA7B;AAAA,8BACE;AAAI,QAAA,SAAS,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,IAAD;AACE,QAAA,QAAQ,EAAE,KAAKG;AADjB;AAAA;AAAA;AAAA;AAAA,cAFF,EAKG,KAAKM,KAAL,CAAWW,KAAX,iBAAoB;AAAA,kBAAK,KAAKX,KAAL,CAAWW;AAAhB;AAAA;AAAA;AAAA;AAAA,cALvB,EAMG,KAAKF,YAAL,EANH;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAUD;;AAhDwB;;AAmD3B,eAAejB,GAAf,C,CACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React, { Component } from 'react';\nimport SpellInspirations from '../SpellInspirations/SpellInspirations';\nimport Form from '../Form/Form'\nimport { Route } from 'react-router-dom'\nimport { fetchKittens, fetchSwansonQuotes } from '../../utils/apiCalls'\nimport background from '../../assets/enchantedForest.png'\nimport './App.css';\n\nclass App extends Component{\n  constructor() {\n    super()\n      this.state = {\n        swanspiration: {},\n        spells: [],\n        error: ''\n      }\n  }\n\n  addSpell = (newSpell) => {\n    console.log(newSpell)\n    this.setState({ spells: [...this.state.spells, newSpell]})\n  }\n\n  componentDidMount = async () => {\n    const swanspiration = await fetchSwansonQuotes()\n      .then(data => data[0])\n    const kittenFamiliar = await fetchKittens()\n      .then(data => data.file)\n    const organizeKitsNQuotes = {\n      id: 0, swanspiration, kittenFamiliar,\n    }\n    //this.setState({ spells: [...this.state.spells, organizeKitsNQuotes]})\n  }\n\n  renderSpells = () => {\n    if(this.state.spells.length) {\n      return   <SpellInspirations\n                spells={this.state.spells}\n               />\n    } else {\n      return <h1>Cast your hearts desire</h1>\n    }\n  }\n\n  render() {\n\n    return (\n      <main className='App' style={{ backgroundImage: `url(${background})`}}>\n        <h1 className='app-title'>Kittens To Witches</h1>\n        <Form\n          addSpell={this.addSpell}\n        />\n        {this.state.error && <h2>{this.state.error}</h2>}\n        {this.renderSpells()}\n      </main>\n    );\n  }\n}\n\nexport default App;\n//\n// componentDidMount = async () => {\n//   const swanspiration = await fetchSwansonQuotes()\n//     .then(data => data[0])\n//   const kittenFamiliar = await fetchKittens()\n//     .then(data => data.file)\n//   const organizeKitsNQuotes = {\n//     id: 0, swanspiration, kittenFamiliar,\n//   }\n//   this.setState({ swanspiration:  organizeKitsNQuotes})\n// }\n"]},"metadata":{},"sourceType":"module"}