{"ast":null,"code":"var _jsxFileName = \"/Users/angelabattillo/mod3-projects/kittensToWitches/kittens-to-witches/src/components/App/App.js\";\nimport React, { Component } from 'react';\nimport SpellInspirations from '../SpellInspirations/SpellInspirations';\nimport Form from '../Form/Form';\nimport Swanspiration from '../Swanspiration/Swanspiration';\nimport About from '../About/About';\nimport { Route, Switch, Link } from 'react-router-dom';\nimport { fetchKittens, fetchSwansonQuotes } from '../../utils/apiCalls';\nimport background from '../../assets/enchantedForest.png';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.addSpell = newSpell => {\n      newSpell.id = this.state.spells.length + 1;\n      console.log(newSpell);\n      this.setState({\n        spells: [...this.state.spells, newSpell]\n      });\n    };\n\n    this.renderSpells = () => {\n      if (this.state.spells.length) {\n        return /*#__PURE__*/_jsxDEV(SpellInspirations, {\n          spells: this.state.spells,\n          favoriteSpell: this.favoriteSpell\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 17\n        }, this);\n      } else {\n        return /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"invitation\",\n          children: \"Cast your hearts desire\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 14\n        }, this);\n      }\n    };\n\n    this.favoriteSpell = id => {\n      const findSpell = this.state.spells.find(spell => spell.id === id);\n      findSpell.keep = !findSpell.keep;\n      this.setState({\n        spells: [...this.state.spells]\n      });\n    };\n\n    this.componentDidMount = async () => {\n      const swanspiration = await fetchSwansonQuotes().then(data => data[0]);\n      const kittenFamiliar = await fetchKittens().then(data => data.file);\n      const organizeKitsNQuotes = {\n        swanspiration,\n        kittenFamiliar\n      };\n      this.setState({\n        swanspiration: organizeKitsNQuotes\n      });\n      this.setState({\n        loading: false\n      });\n    };\n\n    this.state = {\n      keep: false,\n      loading: true,\n      swanspiration: '',\n      spells: [],\n      error: ''\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Switch, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/favorites\",\n        render: () => {\n          return /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Favorites Go Here\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 19\n          }, this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/about\",\n        component: About\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/\",\n        render: () => {\n          return /*#__PURE__*/_jsxDEV(\"main\", {\n            className: \"App\",\n            style: {\n              backgroundImage: `url(${background})`\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              className: \"app-title\",\n              children: \"Kittens To Witches\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 13\n            }, this), this.state.loading && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"loading\",\n              children: \"Loading...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 36\n            }, this), /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/about\",\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"About Us\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 13\n            }, this), this.state.swanspiration && /*#__PURE__*/_jsxDEV(Swanspiration, {\n              swanspiration: this.state.swanspiration\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form, {\n              addSpell: this.addSpell\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 15\n            }, this), this.state.error && /*#__PURE__*/_jsxDEV(\"h2\", {\n              children: this.state.error\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 34\n            }, this), this.renderSpells()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 18\n          }, this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        render: () => {\n          return /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"404 Page not Found\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 18\n          }, this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/angelabattillo/mod3-projects/kittensToWitches/kittens-to-witches/src/components/App/App.js"],"names":["React","Component","SpellInspirations","Form","Swanspiration","About","Route","Switch","Link","fetchKittens","fetchSwansonQuotes","background","App","constructor","addSpell","newSpell","id","state","spells","length","console","log","setState","renderSpells","favoriteSpell","findSpell","find","spell","keep","componentDidMount","swanspiration","then","data","kittenFamiliar","file","organizeKitsNQuotes","loading","error","render","backgroundImage"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport SpellInspirations from '../SpellInspirations/SpellInspirations';\nimport Form from '../Form/Form'\nimport Swanspiration from '../Swanspiration/Swanspiration'\nimport About from '../About/About'\nimport { Route, Switch, Link } from 'react-router-dom'\nimport { fetchKittens, fetchSwansonQuotes } from '../../utils/apiCalls'\nimport background from '../../assets/enchantedForest.png'\nimport './App.css';\n\nclass App extends Component{\n  constructor() {\n    super()\n      this.state = {\n        keep: false,\n        loading: true,\n        swanspiration: '',\n        spells: [],\n        error: ''\n      }\n  }\n\n  addSpell = (newSpell) => {\n    newSpell.id = this.state.spells.length + 1\n    console.log(newSpell)\n    this.setState({ spells: [...this.state.spells, newSpell]})\n  }\n\n  renderSpells = () => {\n    if(this.state.spells.length) {\n      return    <SpellInspirations spells={this.state.spells} favoriteSpell={this.favoriteSpell}/>\n    } else {\n      return <h1 className='invitation'>Cast your hearts desire</h1>\n    }\n  }\n\n  favoriteSpell = (id) => {\n    const findSpell = this.state.spells.find(spell => spell.id === id)\n      findSpell.keep = !findSpell.keep\n      this.setState({ spells: [...this.state.spells]})\n\n  }\n\n  componentDidMount = async () => {\n    const swanspiration = await fetchSwansonQuotes()\n      .then(data => data[0])\n    const kittenFamiliar = await fetchKittens()\n      .then(data => data.file)\n    const organizeKitsNQuotes = {\n     swanspiration, kittenFamiliar,\n    }\n    this.setState({ swanspiration:  organizeKitsNQuotes})\n    this.setState({loading: false})\n  }\n\n  render() {\n\n    return (\n      <Switch>\n        <Route path='/favorites' render={() => {\n          return  <h1>Favorites Go Here</h1>\n        }}/>\n        <Route path='/about' component={ About }/>\n\n        <Route exact path='/' render={() => {\n\n          return <main className='App' style={{ backgroundImage: `url(${background})`}}>\n            <h1 className='app-title'>Kittens To Witches</h1>\n            {this.state.loading && <p className='loading'>Loading...</p>}\n            <Link to='/about'>\n              <p>About Us</p>\n\n            </Link>\n            {this.state.swanspiration &&\n\n              <Swanspiration\n                swanspiration={this.state.swanspiration}\n                />}\n\n              <Form\n              addSpell={this.addSpell}\n              />\n\n            {this.state.error && <h2>{this.state.error}</h2>}\n            {this.renderSpells()}\n\n          </main>\n        }}/>\n        <Route render={() => {\n          return <h1>404 Page not Found</h1>\n        }}/>\n      </Switch>\n\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}