{"version":3,"sources":["components/SpellCard/SpellCard.js","components/SpellInspirations/SpellInspirations.js","components/Form/Form.js","components/Swanspiration/Swanspiration.js","components/About/About.js","components/404/404.js","components/Favorites/Favorites.js","assets/enchantedForest.png","components/App/App.js","utils/apiCalls.js","reportWebVitals.js","index.js"],"names":["SpellCard","keep","favoriteSpell","id","title","description","chosenSpell","className","onClick","SpellInspirations","spells","spellsDisplay","map","spell","Form","props","handleChange","event","setState","target","name","value","sendSpell","newSpell","state","addSpell","clearInputs","type","placeholder","this","onChange","Component","Swanspiration","swanspiration","src","kittenFamiliar","alt","About","to","FourOFour","Favorites","App","length","console","log","renderSpells","findSpell","find","componentDidMount","a","fetch","then","response","json","data","catch","err","file","organizeKitsNQuotes","loading","error","path","render","favorites","filter","component","exact","style","backgroundImage","background","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.dc7a25ba.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './spellCard.css'\n\nconst SpellCard = ({ keep, favoriteSpell, id, title, description }) => {\n  const chosenSpell = keep ? 'Forget ðŸ”®' : 'Keep ðŸª„'\n  return(\n    <article className='spell-card'>\n      <h2 className='invocation'>âœ¨Asheâœ¨</h2>\n      <h3 className='title'>{title}</h3>\n      <p className='spell'>{description}</p>\n      <button className='love-button' onClick={() => favoriteSpell(id)}>{chosenSpell}</button>\n    </article>\n  )\n}\n\nexport default SpellCard;\n\nSpellCard.propTypes = {\n  id: PropTypes.number,\n  title: PropTypes.string,\n  description: PropTypes.string,\n  keep: PropTypes.bool,\n  favoriteSpell: PropTypes.func\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport SpellCard from '../SpellCard/SpellCard'\nimport './spellInspirations.css';\n\nconst SpellInspirations = ({ spells, favoriteSpell }) => {\n\n  const spellsDisplay = spells.map(spell => {\n    return (\n        <SpellCard\n         key={spell.id}\n         id={spell.id}\n         title={spell.title}\n         description={spell.description}\n         keep={spell.keep}\n         favoriteSpell={favoriteSpell}\n        />\n      )\n  })\n\n  return(\n    <article className='spell-box'>\n      { spellsDisplay }\n    </article>\n  )\n}\n\nexport default SpellInspirations;\n\nSpellInspirations.propTypes = {\n  id: PropTypes.number,\n  title: PropTypes.string,\n  description: PropTypes.string,\n  keep: PropTypes.bool,\n  favoriteSpell: PropTypes.func\n}\n","import React, { Component } from 'react';\nimport './form.css';\n\nclass Form extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      id: '',\n      title: '',\n      description: ''\n    }\n  }\n\n  handleChange = (event) => {\n    this.setState({ [event.target.name]:\n    event.target.value})\n  }\n\n  sendSpell = event => {\n\n    const newSpell = {\n      title: this.state.title,\n      description: this.state.description\n    }\n    this.props.addSpell(newSpell)\n    this.clearInputs()\n\n    }\n\n    clearInputs = () => {\n    this.setState({ title: '', description: ''})\n\n  }\n\n  render() {\n\n    return(\n      <form className='form-box'>\n        <input\n          className='title-input'\n          type='text'\n          placeholder='Name Spell'\n          name='title'\n          value={this.state.title}\n          onChange={event => this.handleChange(event)}\n        />\n\n          <input\n            className='spell-composition'\n            type='text'\n            placeholder='Compose Spell'\n            name='description'\n            value={this.state.description}\n            onChange={(event) => this.handleChange(event)}\n          />\n\n          <button className='send-spell' type='button' onClick={ () => this.sendSpell()}>Cast Spell</button>\n\n      </form>\n    )\n  }\n}\n\nexport default Form;\n","import React from 'react';\nimport './swanspiration.css'\n\nconst Swanspiration = ({ swanspiration }) => {\n  return(\n    <article className='kit-card'>\n      <img className='cat-pic'\n         src={swanspiration.kittenFamiliar} alt='Adorable kitten familiar'\n         />\n      <p className='ronspiration'>{swanspiration.swanspiration}</p>\n    </article>\n  )\n}\n\nexport default Swanspiration;\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport './about.css'\n\nconst About = () => {\n  return(\n    <section className='about-box'>\n      <h1 className='about-title'>âœ¨Why Swanspirations?</h1>\n\n      <p className='about-body'>Sometimes inspiration comes from the strangest of places.  This app was created with the intention of offering the ridiculous wisdom and folly of Ron Swanson.  Then it only seemed right to send Ron Swanson messages with a kitten familiar.  The hope is that you feel at home, laugh and then feel inspired to cast a spell.âœ¨\n      </p>\n      <Link to='/'>\n      <button className='about-home'>Home ðŸª„</button>\n      </Link>\n    </section>\n\n  )\n}\n\nexport default About;\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport './404.css'\n\nconst FourOFour = () => {\n  return(\n    <section>\n      <h1 className='error-page'>404 Page Not Found</h1>\n      <Link to='/'>\n      <button className='error-home'>Home ðŸª„</button>\n      </Link>\n    </section>\n  )\n}\n\nexport default FourOFour;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport SpellCard from '../SpellCard/SpellCard'\nimport { Link } from 'react-router-dom'\nimport './favorites.css'\n\nconst Favorites = ( { spells, favoriteSpell }) => {\n\n  const spellsDisplay = spells.map(spell => {\n    return (\n        <SpellCard\n         key={spell.id}\n         id={spell.id}\n         title={spell.title}\n         description={spell.description}\n         keep={spell.keep}\n         favoriteSpell={favoriteSpell}\n        />\n      )\n  })\n\n  return(\n    <article className='spell-box'>\n      { spellsDisplay }\n      <Link to='/'>\n      <button className='error-home'>Home</button>\n      </Link>\n    </article>\n  )\n\n}\n\nexport default Favorites;\n\nFavorites.propTypes = {\n  id: PropTypes.number,\n  title: PropTypes.string,\n  description: PropTypes.string,\n  keep: PropTypes.bool,\n  favoriteSpell: PropTypes.func\n}\n","export default __webpack_public_path__ + \"static/media/enchantedForest.3b87ed50.png\";","import React, { Component } from 'react';\nimport SpellInspirations from '../SpellInspirations/SpellInspirations';\nimport Form from '../Form/Form'\nimport Swanspiration from '../Swanspiration/Swanspiration'\nimport About from '../About/About'\nimport FourOFour from '../404/404'\nimport Favorites from '../Favorites/Favorites'\nimport { Route, Switch, Link } from 'react-router-dom'\nimport { fetchKittens, fetchSwansonQuotes } from '../../utils/apiCalls'\nimport background from '../../assets/enchantedForest.png'\nimport './App.css';\n\nclass App extends Component{\n  constructor() {\n    super()\n      this.state = {\n        keep: false,\n        loading: true,\n        swanspiration: '',\n        spells: [],\n        error: ''\n      }\n  }\n\n  addSpell = (newSpell) => {\n    newSpell.id = this.state.spells.length + 1\n    console.log(newSpell)\n    this.setState({ spells: [...this.state.spells, newSpell]})\n  }\n\n  renderSpells = () => {\n    if(this.state.spells.length) {\n      return    <SpellInspirations spells={this.state.spells} favoriteSpell={this.favoriteSpell}/>\n    } else {\n      return <h1 className='invitation '>Cast your hearts desire</h1>\n    }\n  }\n\n  favoriteSpell = (id) => {\n    const findSpell = this.state.spells.find(spell => spell.id === id)\n      findSpell.keep = !findSpell.keep\n      this.setState({ spells: [...this.state.spells]})\n\n  }\n\n  componentDidMount = async () => {\n    const swanspiration = await fetchSwansonQuotes()\n      .then(data => data[0])\n    const kittenFamiliar = await fetchKittens()\n      .then(data => data.file)\n    const organizeKitsNQuotes = {\n     swanspiration, kittenFamiliar,\n    }\n    this.setState({ swanspiration:  organizeKitsNQuotes})\n    this.setState({loading: false})\n  }\n\n  render() {\n\n    return (\n      <Switch>\n        <Route path='/favorites' render={() => {\n          const favorites = this.state.spells.filter(spell => {\n            return spell.keep\n          })\n          return  <Favorites spells={favorites}/>\n        }}/>\n\n        <Route path='/about' component={ About }/>\n\n        <Route exact path='/' render={() => {\n\n          return <main className='App' style={{\n            backgroundImage: `url(${background})`}}>\n            <h1 className='app-title'>Kittens To Witches</h1>\n            {this.state.loading && <p className='loading'>Loading...</p>}\n\n            {this.state.swanspiration &&\n\n              <Swanspiration\n                swanspiration={this.state.swanspiration}\n                />}\n\n              <Form\n              addSpell={this.addSpell}\n              />\n\n            {this.state.error && <h2>{this.state.error}</h2>}\n            {this.renderSpells()}\n        <div className='should-be-footer'>\n        <Link to='/about'>\n          <p className='about'>About Us</p>\n        </Link>\n        <Link to='/favorites'>\n          <p className='favs'>Visit Favorites</p>\n        </Link>\n        </div>\n             </main>\n        }}/>\n\n        <Route path='/404' component={ FourOFour }/>\n\n      </Switch>\n\n    );\n  }\n}\n\nexport default App;\n","export const fetchKittens = () => {\n  return fetch('https://aws.random.cat/meow')\n    .then(response => response.json())\n    .then(data => data)\n\n    .catch(err => 'Whoops looks like your kitten familiar is out playing today.  Lets try this again later')\n}\n\nexport const fetchSwansonQuotes = () => {\n  return fetch('https://ron-swanson-quotes.herokuapp.com/v2/quotes')\n    .then(response => response.json())\n    .then(data => data)\n\n    .catch(err => 'This swanspiration is experiencing delays.  Please try again later')\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\nimport { BrowserRouter } from 'react-router-dom';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}